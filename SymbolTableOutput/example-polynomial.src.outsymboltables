global 
class | id: POLYNOMIAL | 
	class:POLYNOMIAL 
	function | evaluate | aparams: (x:float)| type: float| visiblity: public
	function:evaluate 
		parameter | id: x | type: float


class | id: LINEAR | 
	class:LINEAR 
	inherit | POLYNOMIAL
	data | id: a | type: float | visibility: private
	data | id: b | type: float | visibility: private
	function | build | aparams: (A:float B:float)| type: LINEAR| visiblity: public
	function:build 
		parameter | id: A | type: float
		parameter | id: B | type: float

	function | evaluate | aparams: (x:float)| type: float| visiblity: public
	function:evaluate 
		parameter | id: x | type: float
		localvar | id: result | type: float
		tempvar | id: temp5 | type: float | expressionId: 9
		tempvar | id: temp6 | type: float | expressionId: 9


class | id: QUADRATIC | 
	class:QUADRATIC 
	inherit | POLYNOMIAL
	data | id: a | type: float | visibility: private
	data | id: b | type: float | visibility: private
	data | id: c | type: float | visibility: private
	function | build | aparams: (A:float B:float C:float)| type: QUADRATIC| visiblity: public
	function:build 
		parameter | id: A | type: float
		parameter | id: B | type: float
		parameter | id: C | type: float
		localvar | id: x | type: float

	function | evaluate | aparams: (x:float)| type: float| visiblity: public
	function:evaluate 
		parameter | id: x | type: float
		localvar | id: result | type: float
		tempvar | id: temp1 | type: float | expressionId: 3
		tempvar | id: temp2 | type: float | expressionId: 3
		tempvar | id: temp3 | type: float | expressionId: 4
		tempvar | id: temp4 | type: float | expressionId: 4


function | main | aparams: ()| type: void
	function:main 
	localvar | id: f1 | type: LINEAR[][]
	localvar | id: f2 | type: QUADRATIC[][][]
	tempvar | id: temp7 | type: integer | expressionId: 11

