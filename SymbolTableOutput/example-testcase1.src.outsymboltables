global 
class | id: CLASS1 | MemSize: 8
	class:CLASS1 
	data | id: a | type: float | visibility: private | MemSize: 8

class | id: CLASS2 | MemSize: 16
	class:CLASS2 
	data | id: a | type: float | visibility: public | MemSize: 8
	data | id: a | type: float | visibility: public | MemSize: 8

class | id: CLASS3 | MemSize: 0
	class:CLASS3 
	function | evaluate | aparams: (x:float)| type: float| visiblity: public| memsize: 0
	function:evaluate 
		parameter | id: x | type: float| memsize: 0

	function | evaluate | aparams: (x:float)| type: float| visiblity: public| memsize: 0
	function:evaluate 
		parameter | id: x | type: float| memsize: 0


class | id: CLASS4 | MemSize: 0
	class:CLASS4 
	inherit | CLASS2
	inherit | CLASS3
	function | evaluate | aparams: (x:float)| type: float| visiblity: private| memsize: 0
	function:evaluate 
		parameter | id: x | type: float| memsize: 0


class | id: EMPTYCLASS | MemSize: 0
	class:EMPTYCLASS 

class | id: POLYNOMIAL | MemSize: 0
	class:POLYNOMIAL 
	function | evaluate | aparams: (x:float)| type: float| visiblity: public| memsize: 0
	function:evaluate 
		parameter | id: x | type: float| memsize: 0


class | id: LINEAR | MemSize: 16
	class:LINEAR 
	inherit | POLYNOMIAL
	data | id: a | type: float | visibility: private | MemSize: 8
	data | id: b | type: float | visibility: private | MemSize: 8
	function | build | aparams: (A:float B:float)| type: LINEAR| visiblity: public| memsize: 0
	function:build 
		parameter | id: A | type: float| memsize: 0
		parameter | id: B | type: float| memsize: 0

	function | evaluate | aparams: (x:float)| type: float| visiblity: public| memsize: 0
	function:evaluate 
		parameter | id: x | type: float| memsize: 0


class | id: QUADRATIC | MemSize: 24
	class:QUADRATIC 
	inherit | POLYNOMIAL
	data | id: a | type: float | visibility: private | MemSize: 8
	data | id: b | type: float | visibility: private | MemSize: 8
	data | id: c | type: float | visibility: private | MemSize: 8
	function | build | aparams: (A:float B:float C:float)| type: QUADRATIC| visiblity: public| memsize: 0
	function:build 
		parameter | id: A | type: float| memsize: 0
		parameter | id: B | type: float| memsize: 0
		parameter | id: C | type: float| memsize: 0

	function | evaluate | aparams: (x:float)| type: float| visiblity: private| memsize: 0
	function:evaluate 
		parameter | id: x | type: float| memsize: 0


