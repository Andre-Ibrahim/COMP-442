[blockcmt, /*    function body: local variable declarations\n    --------------------------------------\n| | no local variable declarations\n|X| local variable declarations\n|X| intertwined statements and variable declarations\n\n    function body: statements\n    --------------------------------------\n|X| no statement\n|X| 1 statement\n|X| n statements\n|X| if statement\n|X| if: empty then or else blocks\n|X| if: 1-statement then or else blocks\n|X| if: n-statements then or else blocks\n|X| while statement\n|X| while: empty block\n|X| while: 1-statement block\n|X| while: n-statement block\n|X| read(<variable>) statement\n|X| write(<expr>) statement\n|X| return(<expr>) statement\n|X| assignment statement\n*/, 1]
[function, function, 26][id, functionBlocks, 26][openpar, (, 26][id, arr, 26][colon, :, 26][integer, integer, 26][opensqbr, [, 26][closesqbr, ], 26][comma, ,, 26][id, size, 26][colon, :, 26][integer, integer, 26][closepar, ), 26][returntype, =>, 26][void, void, 26]
[opencubr, {, 27]
[localvar, localvar, 28][id, n, 28][colon, :, 28][integer, integer, 28][semi, ;, 28]
[id, n, 29][assign, =, 29][id, size, 29][semi, ;, 29]
[localvar, localvar, 30][id, i, 30][colon, :, 30][integer, integer, 30][semi, ;, 30]
[id, i, 31][assign, =, 31][intnum, 0, 31][semi, ;, 31]
[while, while, 32][openpar, (, 32][id, i, 32][lt, <, 32][id, n, 32][closepar, ), 32][opencubr, {, 32]
[write, write, 33][openpar, (, 33][id, arr, 33][opensqbr, [, 33][id, i, 33][closesqbr, ], 33][closepar, ), 33][semi, ;, 33]
[id, i, 34][assign, =, 34][id, i, 34][plus, +, 34][intnum, 1, 34][semi, ;, 34]
[closecubr, }, 35][semi, ;, 35]
[read, read, 37][openpar, (, 37][id, n, 37][closepar, ), 37][semi, ;, 37]
[while, while, 39][openpar, (, 39][id, i, 39][lt, <, 39][id, n, 39][closepar, ), 39][opencubr, {, 39]
[write, write, 40][openpar, (, 40][id, arr, 40][opensqbr, [, 40][id, i, 40][closesqbr, ], 40][closepar, ), 40][semi, ;, 40]
[closecubr, }, 41][semi, ;, 41]
[while, while, 43][openpar, (, 43][id, i, 43][lt, <, 43][id, n, 43][closepar, ), 43][opencubr, {, 43][closecubr, }, 43][semi, ;, 43]
[if, if, 45][openpar, (, 45][id, arr, 45][opensqbr, [, 45][id, j, 45][closesqbr, ], 45][gt, >, 45][id, arr, 45][opensqbr, [, 45][id, j, 45][plus, +, 45][intnum, 1, 45][closesqbr, ], 45][closepar, ), 45]
[then, then, 46][opencubr, {, 46]
[id, temp, 47][assign, =, 47][id, arr, 47][opensqbr, [, 47][id, j, 47][closesqbr, ], 47][semi, ;, 47]
[closecubr, }, 48][else, else, 48][semi, ;, 48]
[if, if, 50][openpar, (, 50][id, arr, 50][opensqbr, [, 50][id, j, 50][closesqbr, ], 50][gt, >, 50][id, arr, 50][opensqbr, [, 50][id, j, 50][plus, +, 50][intnum, 1, 50][closesqbr, ], 50][closepar, ), 50]
[then, then, 51][opencubr, {, 51]
[closecubr, }, 52][else, else, 52][opencubr, {, 52]
[id, temp, 53][assign, =, 53][id, arr, 53][opensqbr, [, 53][id, j, 53][closesqbr, ], 53][semi, ;, 53]
[closecubr, }, 54][semi, ;, 54]
[return, return, 56][openpar, (, 56][id, n, 56][closepar, ), 56][semi, ;, 56]
[closecubr, }, 57]

