[inlinecmt, // main funtion to test above, 1]
[function, function, 2][id, main, 2][openpar, (, 2][closepar, ), 2][returntype, =>, 2][void, void, 2]
[opencubr, {, 3]
[localvar, localvar, 4][id, arr, 4][colon, :, 4][integer, integer, 4][opensqbr, [, 4][intnum, 7, 4][closesqbr, ], 4][semi, ;, 4]
[id, arr, 5][opensqbr, [, 5][intnum, 0, 5][closesqbr, ], 5][assign, =, 5][intnum, 64, 5][semi, ;, 5]
[id, arr, 6][opensqbr, [, 6][intnum, 1, 6][closesqbr, ], 6][assign, =, 6][intnum, 34, 6][semi, ;, 6]
[id, arr, 7][opensqbr, [, 7][intnum, 2, 7][closesqbr, ], 7][assign, =, 7][intnum, 25, 7][semi, ;, 7]
[id, arr, 8][opensqbr, [, 8][intnum, 3, 8][closesqbr, ], 8][assign, =, 8][intnum, 12, 8][semi, ;, 8]
[id, arr, 9][opensqbr, [, 9][intnum, 4, 9][closesqbr, ], 9][assign, =, 9][intnum, 22, 9][semi, ;, 9]
[id, arr, 10][opensqbr, [, 10][intnum, 5, 10][closesqbr, ], 10][assign, =, 10][intnum, 11, 10][semi, ;, 10]
[id, arr, 11][opensqbr, [, 11][intnum, 6, 11][closesqbr, ], 11][assign, =, 11][intnum, 90, 11][semi, ;, 11]
[localvar, localvar, 14][id, b, 14][colon, :, 14][integer, integer, 14][semi, ;, 14]
[localvar, localvar, 15][id, d, 15][colon, :, 15][integer, integer, 15][semi, ;, 15]
[id, b, 16][assign, =, 16][intnum, 7, 16][semi, ;, 16]
[id, d, 17][assign, =, 17][intnum, 0, 17][semi, ;, 17]
[while, while, 18][openpar, (, 18][id, d, 18][lt, <, 18][id, b, 18][closepar, ), 18][opencubr, {, 18]
[write, write, 19][openpar, (, 19][id, arr, 19][opensqbr, [, 19][id, d, 19][closesqbr, ], 19][closepar, ), 19][semi, ;, 19]
[id, d, 20][assign, =, 20][id, d, 20][plus, +, 20][intnum, 1, 20][semi, ;, 20]
[closecubr, }, 21][semi, ;, 21]
[localvar, localvar, 24][id, n, 24][colon, :, 24][integer, integer, 24][semi, ;, 24]
[localvar, localvar, 25][id, i, 25][colon, :, 25][integer, integer, 25][semi, ;, 25]
[localvar, localvar, 26][id, k, 26][colon, :, 26][integer, integer, 26][semi, ;, 26]
[localvar, localvar, 27][id, temp, 27][colon, :, 27][integer, integer, 27][semi, ;, 27]
[id, n, 28][assign, =, 28][intnum, 7, 28][semi, ;, 28]
[id, i, 29][assign, =, 29][intnum, 0, 29][semi, ;, 29]
[id, k, 30][assign, =, 30][intnum, 0, 30][semi, ;, 30]
[id, temp, 31][assign, =, 31][intnum, 0, 31][semi, ;, 31]
[while, while, 32][openpar, (, 32][id, i, 32][lt, <, 32][openpar, (, 32][id, n, 32][minus, -, 32][intnum, 1, 32][closepar, ), 32][closepar, ), 32][opencubr, {, 32]
[while, while, 33][openpar, (, 33][id, k, 33][lt, <, 33][openpar, (, 33][id, n, 33][minus, -, 33][openpar, (, 33][id, i, 33][plus, +, 33][intnum, 1, 33][closepar, ), 33][closepar, ), 33][closepar, ), 33][opencubr, {, 33]
[if, if, 34][openpar, (, 34][id, arr, 34][opensqbr, [, 34][id, k, 34][closesqbr, ], 34][gt, >, 34][id, arr, 34][opensqbr, [, 34][id, k, 34][plus, +, 34][intnum, 1, 34][closesqbr, ], 34][closepar, ), 34]
[then, then, 35][opencubr, {, 35]
[inlinecmt, // swap temp and arr[i], 36]
[id, temp, 37][assign, =, 37][id, arr, 37][opensqbr, [, 37][id, k, 37][closesqbr, ], 37][semi, ;, 37]
[id, arr, 38][opensqbr, [, 38][id, k, 38][closesqbr, ], 38][assign, =, 38][id, arr, 38][opensqbr, [, 38][id, k, 38][plus, +, 38][intnum, 1, 38][closesqbr, ], 38][semi, ;, 38]
[id, arr, 39][opensqbr, [, 39][id, k, 39][plus, +, 39][intnum, 1, 39][closesqbr, ], 39][assign, =, 39][id, temp, 39][semi, ;, 39]
[closecubr, }, 40][else, else, 40][semi, ;, 40]
[id, k, 41][assign, =, 41][id, k, 41][plus, +, 41][intnum, 1, 41][semi, ;, 41]
[closecubr, }, 42][semi, ;, 42]
[id, i, 43][assign, =, 43][id, i, 43][plus, +, 43][intnum, 1, 43][semi, ;, 43]
[id, k, 44][assign, =, 44][intnum, 0, 44][semi, ;, 44]
[closecubr, }, 45][semi, ;, 45]
[write, write, 47][openpar, (, 47][intnum, 10000, 47][closepar, ), 47][semi, ;, 47]
[localvar, localvar, 50][id, w, 50][colon, :, 50][integer, integer, 50][semi, ;, 50]
[localvar, localvar, 51][id, e, 51][colon, :, 51][integer, integer, 51][semi, ;, 51]
[id, w, 52][assign, =, 52][intnum, 7, 52][semi, ;, 52]
[id, e, 53][assign, =, 53][intnum, 0, 53][semi, ;, 53]
[while, while, 54][openpar, (, 54][id, e, 54][lt, <, 54][id, w, 54][closepar, ), 54][opencubr, {, 54]
[write, write, 55][openpar, (, 55][id, arr, 55][opensqbr, [, 55][id, e, 55][closesqbr, ], 55][closepar, ), 55][semi, ;, 55]
[id, e, 56][assign, =, 56][id, e, 56][plus, +, 56][intnum, 1, 56][semi, ;, 56]
[closecubr, }, 57][semi, ;, 57]
[closecubr, }, 59]
[blockcmt, /*\n    classes\n    --------------------------------------\n|X| no class declaration\n| | class declaration\n| | multiple class declarations\n| | no data member declaration\n| | data member declaration\n| | multiple data member declaration\n| | no member function declaration\n| | member function declaration\n| | multiple member function declaration\n| | no member\n| | no inherited class\n| | one inherited class\n| | multiple inherited classes\n| | private member specifier\n| | public member specifier\n\n    functions: definitions\n    --------------------------------------\n| | no main function definition\n|X| main function definition\n| | no free function definition\n|X| free function definition\n|X| multiple free function definitions\n|X| no member function definition\n| | member function definition\n| | multiple member function definitions\n|X| return type: void\n| | return type: integer\n| | return type: float\n| | return type: id\n| | return type: array (not allowed)\n\n    functions: formal parameters\n    --------------------------------------\n|X| type: integer\n| | type: float\n| | type: id\n|X| type: 1-dim array \n| | type: n-dim array\n| | type: array (with size)\n|X| type: array (without size)\n\n    functions: calls\n    --------------------------------------\n|X| free function call\n| | member function call\n| | parameters:0\n| | parameters:1\n|X| parameters:n\n|X| array parameter - 1-dim\n| | array parameter - n-dim\n| | array parameter - with size\n| | array parameter - without size\n| | function call as statement\n| | function call as expression factor\n| | expression as parameter\n\n    variable declaration\n    --------------------------------------\n|X| type: integer\n| | type: float\n| | type: string\n| | type: id\n|X| type: 1-dim array \n| | type: n-dim array\n|X| type: array (with size)\n| | type: array (without size) (not allowed)\n\n    function body: local variable declarations\n    --------------------------------------\n| | no local variable declarations\n|X| local variable declarations\n| | intertwined statements and variable declarations\n\n    function body: statements\n    --------------------------------------\n| | no statement\n| | 1 statement\n|X| n statements\n|X| if statement\n|X| if: empty then or else blocks\n| | if: 1-statement then or else blocks\n|X| if: n-statements then or else blocks\n|X| while statement\n| | while: empty block\n| | while: 1-statement block\n|X| while: n-statement block\n| | read(<variable>) statement\n|X| write(<expr>) statement\n|X| return(<expr>) statement\n|X| assignment statement\n\n    variable + idnest\n    --------------------------------------\n|X| id\n| | id.id\n| | id.id(id)\n| | id(id).id\n| | id(id).id()\n| | id.id[id]\n| | id[id].id\n| | id[id].id[id]\n| | id.id[id][id]\n| | id[id][id].id\n| | id[id][id].id[id][id]\n| | id(id).id[id]\n| | id(id).id[id][id]\n| | expression as array index\n\n    expressions\n    --------------------------------------\n|X| single variable\n|X| involving addop\n| | involving multop\n|X| involving relop\n| | involving addop + multop\n|X| involving multop + relop\n| | involving addop + multop + relop\n| | involving parentheses\n| | involving nested parentheses\n| | involving not\n| | involving sign\n|X| involving literals\n| | involving variable + idnest\n|X| involving function calls\n| | involving all the above in one expression\n*/, 61]

